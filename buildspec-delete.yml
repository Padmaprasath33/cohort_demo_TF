version: 0.2

env:
  variables:
    TERRAFORM_VERSION: "1.6.5"
    ACTION: "delete"
phases:
  install: 
    runtime-versions: 
      python: 3.11
    on-failure: ABORT       
    commands:
      - tf_version=$TERRAFORM_VERSION
      - wget https://releases.hashicorp.com/terraform/"$TERRAFORM_VERSION"/terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      - unzip terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      - mv terraform /usr/local/bin/
  pre_build:
    on-failure: ABORT     
    commands:
      - echo terraform execution started on `date`            
  build:
    on-failure: ABORT   
    commands:
      - cd "$CODEBUILD_SRC_DIR"
      - ls -lrt "$CODEBUILD_SRC_DIR"
      - terraform --version
      - terraform init -input=false
      - |
        if [ "$ACTION" = "validate" ]; then 
          terraform validate
        fi
      - |
        if [ "$ACTION" = "plan" ]; then
          terraform plan -lock=false -input=false
        fi
      - |
        if [ "$ACTION" = "apply" ]; then
          terraform apply -var="datadog_api_key=7f14916484a1f8410026a47e2c2f97c6" -var="datadog_app_key=e168ad50d11be536078cb9861f7a0351cc9db0ee" -input=false -auto-approve
        fi
      - |
        if [ "$ACTION" = "destroy" ]; then
          terraform destroy -var="datadog_api_key=7f14916484a1f8410026a47e2c2f97c6" -var="datadog_app_key=e168ad50d11be536078cb9861f7a0351cc9db0ee" -input=false -auto-approve
        fi
  post_build:
    on-failure: CONTINUE   
    commands:
      - echo terraform execution completed on `date`   